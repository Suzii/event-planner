@model EventPlanner.Models.Models.EventModel

@{
    ViewBag.Title = "Create Event";
}


@*TODO: Can be maybe moved to layout or at least partial view*@
<div class="jumbotron">
    <h1>Event Planner</h1>
    <p class="lead">Some catchy phrase to introduce our supercool app.</p>
    <p><a href="#start" class="btn btn-primary btn-lg">Start now </a></p>
</div>

<div class="container">
        @Html.ValidationSummary()
    @using (Html.BeginForm("Index", "CreateEvent", FormMethod.Post, new { @class = "" }))
    {
        <div class="row" id="intro">

            <div class="form-group">
                @Html.LabelFor(m => m.Title)
                @Html.TextBoxFor(m => m.Title, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Title, "", new { @class = "text-danger" })

            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.Desc)
                @Html.TextAreaFor(m => m.Desc, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Desc, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.ExpectedLength)
                @Html.TextBoxFor(m => m.ExpectedLength, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.ExpectedLength, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.OthersCanEdit)
                @Html.EditorFor(m => m.OthersCanEdit, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.OthersCanEdit, "", new { @class = "text-danger" })
            </div>


            <div class="form-group" id="containerDates">

                <div class="container">
                    <div class="form-group">
                        <label for="dp">Choose a date</label>
                        <input type="date" class="form-control" id="dp" name="Date" />
                    </div>
                </div>

                <label>Times</label>
                <span id="container">
                    @Html.DropDownListFor(m => m.TimeSlots, new SelectList(
                            new List<Object>
                            {

                                new {value = 0, text = "00:00", selected="selected"},
                                new {value = 1, text = "01:00"},
                                new {value = 2, text = "02:00"},
                                new {value = 3, text = "03:00"},
                                new {value = 4, text = "04:00"},
                                new {value = 5, text = "05:00"},
                                new {value = 6, text = "06:00"},
                                new {value = 7, text = "07:00"},
                                new {value = 8, text = "08:00"},
                                new {value = 9, text = "09:00"},
                                new {value = 10, text = "10:00"},
                                new {value = 11, text = "11:00"},
                                new {value = 12, text = "12:00"},
                                new {value = 13, text = "13:00"},
                                new {value = 14, text = "14:00"},
                                new {value = 15, text = "15:00"},
                                new {value = 16, text = "16:00"},
                                new {value = 17, text = "17:00"},
                                new {value = 18, text = "18:00"},
                                new {value = 19, text = "19:00"},
                                new {value = 20, text = "20:00"},
                                new {value = 21, text = "21:00"},
                                new {value = 22, text = "22:00"},
                                new {value = 23, text = "23:00"}
                            },
                            "value",
                            "text",
                            2))
    
                </span>
                <input type="button" id="btnAdd" value="Add another time" />
                <br />
            </div>

            <input type="button" id="btnAddDate" value="Add another date" />

        </div>
        <div class="row" id="places">
            <div class="form-group">
                <label>Places</label>
                <p>Search places for your event using FourSquare!</p>
                <div id="FourSquareSearchModule"></div>

            </div>
        </div>

        <input type="submit" class="btn btn-primary" value="Create an event"/>
    }
</div>


    @section scripts
    {
        
        <script src="@Url.Content("~/Scripts/Typeahead/typeahead.bundle.js")"></script>
        <script type="text/jsx" src="@Url.Content("~/Scripts/Custom/FourSquareSearchModule.jsx")"></script>
        <script type="text/jsx">
            React.render(<FourSquareApp getDataURL="@Url.Action("GetData", "CreateEvent")" preSelectedPlaces={@Html.Raw(Json.Encode(Model.Places))} />, document.getElementById('FourSquareSearchModule'));
        </script>
        <link rel="stylesheet" href="@Url.Content("~/Content/bootstrap.min.css")"/>
        <script src="@Url.Content("~/Scripts/bootstrap.min.js")"></script>
       

    }
