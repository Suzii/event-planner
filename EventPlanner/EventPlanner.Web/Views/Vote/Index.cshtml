@using EventPlanner.Web.Helpers
@using Microsoft.AspNet.Identity
@model EventPlanner.Models.Models.Shared.EventInfoViewModel
@{
    ViewBag.Title = "Vote";
}

@section Scripts {
    @Scripts.Render("https://maps.googleapis.com/maps/api/js")
    @Scripts.Render("https://cdnjs.cloudflare.com/ajax/libs/classnames/2.2.0/index.min.js")
    @Scripts.Render("~/Scripts/Compiled/vote-bundle.js")
}

<div class="row row-adjust">
    <div class="col-md-10">
        <h2>
            @Model.Title
            @*TODO: move this logic to controller*@
            @if (Model.OthersCanEdit || User.Identity.GetUserId() == Model.OrganizerId)
            {
                @Html.ActionLink(" ", "Index", "Event", new { eventHash = Model.Id.GetUniqueUrlParameter() }, new { @class = "glyphicon glyphicon-pencil link-no-underline text-grey" })
            }
        </h2>
    </div>

    @*TODO: refactor position of text*@
    <div class="col-md-2">
        <span class="text-muted text-right">Created on: @Model.CreatedOn.ToShortDateString()</span>
    </div>
</div>

<div class="row row-adjust">
    <div class="col-sm-12">
        @Model.Desc
    </div>
</div>

<div class="container-fluid">
    <div class="row row-adjust">
        <div className="row">
            <h3>Vote for dates:</h3>
            <div id="DatesVotingApp"
                 data-loading-img-url="@Url.Content("~/Content/images/loading_spinner.gif")"
                 data-event-id="@Model.Id"
                 data-submit-vote-url="@Url.Action("SubmitVoteForDate", "Vote", routeValues: new {eventId = Model.Id}))"
                 data-get-initial-data-url="@Url.Action("GetVoteForDateModel", "Vote", routeValues: new {eventId = Model.Id})"></div>
        </div>

        <hr/>

        <div className="row">
            <h3>Vote for places:</h3>
            <div id="PlacesVotingApp"
                 data-loading-img-url="@Url.Content("~/Content/images/loading_spinner.gif")"
                 data-event-id="@Model.Id"
                 data-submit-vote-url="@Url.Action("SubmitVoteForPlace", "Vote", routeValues: new {eventId = Model.Id}))"
                 data-get-initial-data-url="@Url.Action("GetVoteForPlaceModel", "Vote", routeValues: new {eventId = Model.Id})"></div>
        </div>

        <div class="row">
            <div class="col-md-12 v-space40" id="mapModule">
                <div class="row row-adjust" id="map-container" data-places="@Url.Action("GetPlacesModelForMap", "Vote", routeValues: new {eventId = Model.Id})">
                    <div id="map" class="map col-md-9" />
                </div>
            </div>
        </div>
    </div>
</div>