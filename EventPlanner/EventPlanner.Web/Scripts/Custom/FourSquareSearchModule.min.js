"use strict";var SelectedPlace=React.createClass({displayName:"SelectedPlace",propTypes:{place:React.PropTypes.object.isRequired,index:React.PropTypes.number,deleteCallback:React.PropTypes.func},render:function(){var n=this;return React.createElement("div",{className:"inline-block"},React.createElement("input",{type:"hidden",value:this.props.place.Id,name:"Places["+this.props.index+"].Id"}),React.createElement("input",{type:"hidden",value:this.props.place.VenueId,name:"Places["+this.props.index+"].VenueId"}),React.createElement("input",{type:"hidden",value:this.props.place.EventId,name:"Places["+this.props.index+"].EventId"}),React.createElement("input",{type:"hidden",value:this.props.place.Name,name:"Places["+this.props.index+"].Name"}),React.createElement("input",{type:"hidden",value:this.props.place.AddressInfo,name:"Places["+this.props.index+"].AddressInfo"}),React.createElement("input",{type:"hidden",value:this.props.place.City,name:"Places["+this.props.index+"].City"}),React.createElement("span",{className:"label label-tag label-accent"},this.props.place.Name,React.createElement("a",null,React.createElement("span",{className:"glyphicon glyphicon-remove label-remove-button",onClick:function(t){n.props.deleteCallback(t,n.props.place)}}))))}}),Autocomplete=React.createClass({displayName:"Autocomplete",propTypes:{url:React.PropTypes.string.isRequired,constructQueryCallback:React.PropTypes.func,addCallback:React.PropTypes.func},getDefaultProps:function(){return{constructQueryCallback:function(n,t){return console.warning("This default function should be overridden to best fit the use case."),queryObject={q:n},t.type="POST",t.contentType="application/json; charset=UTF-8",t.data=JSON.stringify(queryObject),t},addCallback:function(){}}},componentDidMount:function(){var n=new Bloodhound({datumTokenizer:Bloodhound.tokenizers.obj.whitespace("Name"),queryTokenizer:Bloodhound.tokenizers.whitespace,identify:function(n){return n.VenueId},local:[],remote:{url:this.props.url,rateLimitWait:500,prepare:this.props.constructQueryCallback,transform:function(n){return n.map(function(n){return{Id:n.Id,VenueId:n.VenueId,EventId:n.EventId,Name:n.Name,City:n.City,AddressInfo:n.AddressInfo}})}}}),t=this;$(".typeahead").typeahead({hint:!0,highlight:!0,minLength:3},{name:"Query",source:n,displayKey:"Name",templates:{suggestion:function(n){return"<div><p>"+n.Name+'<\/p><p class="text-muted">'+n.AddressInfo+"<\/p><\/div>"},empty:'<div class="empty-message text-danger"> No places found...<\/div>'}}).on("typeahead:selected",function(n,i){t.props.addCallback(n,i);$(".typeahead").typeahead("val","");console.debug("Value selected: "+i.VenueId+" - "+i.Name)})},render:function(){return React.createElement("input",{type:"text",id:"queryInput",name:"queryInput",className:"typeahead form-control col-md-5",placeholder:"What do you wanna do?"})}}),FourSquareApp=React.createClass({displayName:"FourSquareApp",propTypes:{getDataURL:React.PropTypes.string.isRequired,preSelectedPlaces:React.PropTypes.array,defaultPlace:React.PropTypes.string},getDefaultProps:function(){return{defaultPlace:"Brno"}},getInitialState:function(){return{selectedPlaces:this.props.preSelectedPlaces||[]}},addPlace:function(n,t){var i=t;if(this.state.selectedPlaces.find(function(n){return n.VenueId===i.VenueId})){console.log("Place "+place.VenueId+" - "+place.Name+"is already added!");return}console.debug("Adding place: "+i.VenueId+" "+i.Name);this.state.selectedPlaces.push(i);this.setState({SelectedPlaces:this.state.SelectedPlaces})},deletePlace:function(n,t){var i=this.state.selectedPlaces,r=i.indexOf(t);r>=0&&(i.splice(r,1),this.setState({selectedPlaces:i}))},constructQuery:function(n,t){var i=$("#cityInput").val()||this.props.deletePlace;return queryObject={query:n,city:i},t.type="GET",t.contentType="application/json; charset=UTF-8",t.data=queryObject,t},componentWillMount:function(){},render:function(){var n=this;return React.createElement("div",null,React.createElement("div",{className:"form-group"},React.createElement("input",{type:"text",id:"cityInput",htmlFor:"cityInput",className:"form-control col-sm-2",placeholder:"City...",defaultValue:this.props.defaultPlace}),React.createElement(Autocomplete,{addCallback:this.addPlace,url:this.props.getDataURL,constructQueryCallback:this.constructQuery})),React.createElement("div",{className:"row"},this.state.selectedPlaces.map(function(t,i){return React.createElement(SelectedPlace,{key:t.VenueId,place:t,index:i,deleteCallback:n.deletePlace})})))}});